language: java
jdk:
  - openjdk8

branches:   # (1)
  only:
    - master

before_install:
  - chmod +x gradlew


# Travis CI 서버의 Home
cache:              # (2)
  directories:
    - '$HOME/.m2/repository'
    - '$HOME/.gradle'

script: "./gradlew clean build"   #(3)


before_deploy:      # (5)
  - zip -r springboot *     # (6)
  - mkdir -p deploy         # (7)
  - mv springboot.zip deploy/springboot.zip   # (8)


deploy:     # (9)
  - provider: s3
    access_key_id: $AWS_ACCESS_KEY             # Travis repo setting에 설정된 값
    secret_access_key: $AWS_ACCESS_SECRET_KEY  # Travis repo setting에 설정된 값
    bucket: cooksfirstdishzips          # S3 버킷
    region: ap-northeast-2
    skip_cleanup: true
    acl: private                        # zip 파일 접근을 private으로
    local_dir: deploy                   # before_deploy에서 생성한 디렉토리    # (10)
    wait-until-deployed: true

  - provider: codedeploy
    access_key_id: $AWS_ACCESS_KEY             # Travis repo setting에 설정된 값
    secret_access_key: $AWS_ACCESS_SECRET_KEY  # Travis repo setting에 설정된 값

    bucket: cooksfirstdishzips          # S3 버킷
    key: springboot.zip                 # 빌드 파일을 압축해서 전달
    bundle_type: zip                    # 압축 확장자
    application: cooks_first_dish       # 웹 콘솔에서 등록한 CodeDeploy 애플리케이션

    deployment_group: cooks_first_dish
    region: ap-northeast-2
    wait-until-deployed: true


# CI실행 완료 시 메일로 알람
notifications:      # (4)
  email:
    recipients:
      - 'cooking0620@kakao.com'





# (1) branches
#     * Travis CI를 어느 브랜치가 푸시될 때 수행할 지 지정한다.
#     * 현재 옵션은 오직 master 브랜치에 push될 때만 수행한다.

# (2) cache
#     * gradle을 통해 의존성을 받게 되면 이를 해당 디렉토리에 캐시하여,
#       같은 의존성은 다음 배포 때부터 다시 받지 않도록 설정한다.

# (3) script
#     * master 브랜치에 푸시되었을 때 수행하는 명령어이다.addons:
#     * 여기서는 프로젝트 내부에 둔 gradlew을 통해 clean & build를 수행한다.

# (4) notification
#     * Travis CI 실행 완료 시 자동으로 알람이 가도록 설정한다.

# (5) before_deploy
#     * deploy 명령어가 실행되기 전에 수행된다.
#     * CodeDeploy는 Jar 파일은 인식하지 못하므로 Jar+기타 설정 파일들을 모아 압축(zip)한다.

# (6) zip -r springboot *
#     * 현재 위치의 모든 파일을 springboot 이름으로 압축(zip)한다.
#     * 명령어의 마지막 위치는 본인의 프로젝트 이름이어야한다.

# (7) mkdir -p deploy
#     * deploy라는 디렉토리를 Travis CI가 실행 중인 위치에서 생성한다.

# (8) mv springboot.zip deploy/springboot.zip
#     * springboot.zip 파일을 deploy/springboot.zip으로 이동시킨다.

# (9) deploy
#     * S3로 파일 업로드 혹은 CodeDeploy로 배포 등 외부 서비스와 연동될 행위들을 선언한다.

# (10) local_dir: deploy
#     * 앞에서 생성한 deploy 디렉토리를 지정한다.
#     * 해당 위치의 파일들만 S3로 전송한다.